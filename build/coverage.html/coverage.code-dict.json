{"/home/travis/build/npmtest/node-npmtest-native-dns/test.js":"/* istanbul instrument in package npmtest_native_dns */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-native-dns/lib.npmtest_native_dns.js":"/* istanbul instrument in package npmtest_native_dns */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_native_dns = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_native_dns = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-native-dns/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-native-dns && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_native_dns */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_native_dns\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_native_dns.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_native_dns.rollup.js'] =\n            local.assetsDict['/assets.npmtest_native_dns.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_native_dns.__dirname + '/lib.npmtest_native_dns.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-native-dns/node_modules/native-dns/dns.js":"// Copyright 2011 Timothy J Fontaine <tjfontaine@gmail.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE\n\n\"use strict\";\n\nexports.platform = require('./lib/platform');\n\nexports.createServer = require('./lib/server').createServer;\nexports.createUDPServer = require('./lib/server').createUDPServer;\nexports.createTCPServer = require('./lib/server').createTCPServer;\n\nvar client = require('./lib/client');\nexports.lookup = client.lookup;\nexports.resolve = client.resolve;\nexports.resolve4 = client.resolve4;\nexports.resolve6 = client.resolve6;\nexports.resolveMx = client.resolveMx;\nexports.resolveTxt = client.resolveTxt;\nexports.resolveSrv = client.resolveSrv;\nexports.resolveNs = client.resolveNs;\nexports.resolveCname = client.resolveCname;\nexports.reverse = client.reverse;\n\nvar consts = require('native-dns-packet').consts;\nexports.BADNAME = consts.BADNAME;\nexports.BADRESP = consts.BADRESP;\nexports.CONNREFUSED = consts.CONNREFUSED;\nexports.DESTRUCTION = consts.DESTRUCTION;\nexports.REFUSED = consts.REFUSED;\nexports.FORMERR = consts.FORMERR;\nexports.NODATA = consts.NODATA;\nexports.NOMEM = consts.NOMEM;\nexports.NOTFOUND = consts.NOTFOUND;\nexports.NOTIMP = consts.NOTIMP;\nexports.SERVFAIL = consts.SERVFAIL;\nexports.TIMEOUT = consts.TIMEOUT;\nexports.consts = consts;\n\nvar definedTypes = [\n  'A',\n  'AAAA',\n  'NS',\n  'CNAME',\n  'PTR',\n  'NAPTR',\n  'TXT',\n  'MX',\n  'SRV',\n  'SOA',\n  'TLSA',\n].forEach(function (type) {\n  exports[type] = function (opts) {\n    var obj = {};\n    opts = opts || {};\n    obj.type = consts.nameToQtype(type);\n    obj.class = consts.NAME_TO_QCLASS.IN;\n    Object.keys(opts).forEach(function (k) {\n      if (opts.hasOwnProperty(k) && ['type', 'class'].indexOf(k) == -1) {\n        obj[k] = opts[k];\n      }\n    });\n    return obj;\n  };\n});\n\nexports.Question = function (opts) {\n  var q = {}, qtype;\n\n  opts = opts || {};\n\n  q.name = opts.name;\n\n  qtype = opts.type || consts.NAME_TO_QTYPE.A;\n  if (typeof(qtype) === 'string' || qtype instanceof String)\n    qtype = consts.nameToQtype(qtype.toUpperCase());\n\n  if (!qtype || typeof(qtype) !== 'number')\n    throw new Error(\"Question type must be defined and be valid\");\n\n  q.type = qtype;\n\n  q.class = opts.class || consts.NAME_TO_QCLASS.IN;\n\n  return q;\n};\nexports.Request = client.Request;\n","/home/travis/build/npmtest/node-npmtest-native-dns/node_modules/native-dns/lib/platform.js":"// Copyright 2011 Timothy J Fontaine <tjfontaine@gmail.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE\n\n'use strict';\n\nvar fs = require('fs'),\n    EventEmitter = require('events').EventEmitter,\n    net = require('net'),\n    os = require('os'),\n    util = require('util'),\n    Cache = require('native-dns-cache'),\n    consts = require('native-dns-packet').consts,\n    path = require('path'),\n    utils = require('./utils');\n\nvar A = consts.NAME_TO_QTYPE.A,\n    AAAA = consts.NAME_TO_QTYPE.AAAA,\n    PTR = consts.NAME_TO_QTYPE.PTR;\n\nvar Platform = function() {\n  this._nsReady = false;\n  this._hostsReady = false;\n\n  Object.defineProperty(this, 'ready', {\n    get: function() {\n      return this._nsReady && this._hostsReady;\n    }\n  });\n\n  this._watches = {};\n\n  Object.defineProperty(this, 'watching', {\n    get: function() {\n      return Object.keys(this._watches).length > 0;\n    },\n    set: function(value) {\n      var k;\n      if (value)\n        this._watchFiles();\n      else {\n        for (k in this._watches) {\n          this._watches[k].close();\n          delete this._watches[k];\n        }\n      }\n    }\n  });\n\n  this.hosts = new Cache();\n\n  this._initNameServers();\n  this._initHostsFile();\n  this._populate();\n\n  this.cache = false; //new Cache();\n};\nutil.inherits(Platform, EventEmitter);\n\nPlatform.prototype.reload = function() {\n  this.emit('unready');\n  this._initNameServers();\n  this._initHostsFile();\n  this._populate();\n};\n\nPlatform.prototype._initNameServers = function() {\n  this._nsReady = false;\n  this.name_servers = [];\n  this.search_path = [];\n  this.timeout = 5 * 1000;\n  this.attempts = 5;\n  this.edns = false;\n};\n\nPlatform.prototype._initHostsFile = function() {\n  this._hostsReady = false;\n  this.hosts.purge();\n};\n\nPlatform.prototype._populate = function() {\n  var hostsfile, self = this;\n\n  switch (os.platform()) {\n    case 'win32':\n      this.name_servers = [\n        {\n          address: '8.8.8.8',\n          port: 53\n        },\n        {\n          address: '8.8.4.4',\n          port: 53\n        }\n      ];\n      self._nsReady = true;\n      hostsfile = path.join(process.env.SystemRoot,\n                        '\\\\System32\\\\drivers\\\\etc\\\\hosts');\n      break;\n    default:\n      this.parseResolv();\n      hostsfile = '/etc/hosts';\n      break;\n  }\n\n  this._parseHosts(hostsfile);\n};\n\nPlatform.prototype._watchFiles = function() {\n  var self = this, watchParams;\n\n  watchParams = {persistent: false};\n\n  switch (os.platform()) {\n    case 'win32':\n      //TODO XXX FIXME: it would be nice if this existed\n      break;\n    default:\n      this._watches.resolve = fs.watch('/etc/resolv.conf', watchParams,\n          function(event, filename) {\n            if (event === 'change') {\n              self.emit('unready');\n              self._initNameServers();\n              self.parseResolv();\n            }\n          });\n      this._watches.hosts = fs.watch('/etc/hosts', watchParams,\n          function(event, filename) {\n            if (event === 'change') {\n              self.emit('unready');\n              self._initHostsFile();\n              self._parseHosts(hostsfile);\n            }\n          });\n      break;\n  }\n};\n\nPlatform.prototype._checkReady = function() {\n  if (this.ready) {\n    this.emit('ready');\n  }\n};\n\nPlatform.prototype.parseResolv = function() {\n  var self = this;\n\n  fs.readFile('/etc/resolv.conf', 'ascii', function(err, file) {\n    if (err) {\n      throw err;\n    }\n\n    file.split(/\\n/).forEach(function(line) {\n      var i, parts, subparts;\n      line = line.replace(/^\\s+|\\s+$/g, '');\n      if (!line.match(/^#/)) {\n        parts = line.split(/\\s+/);\n        switch (parts[0]) {\n          case 'nameserver':\n            self.name_servers.push({\n              address: parts[1],\n              port: 53\n            });\n            break;\n          case 'domain':\n            self.search_path = [parts[1]];\n            break;\n          case 'search':\n            self.search_path = [parts.slice(1)];\n            break;\n          case 'options':\n            for (i = 1; i < parts.length; i++) {\n              subparts = parts[i].split(/:/);\n              switch (subparts[0]) {\n                case 'timeout':\n                  self.timeout = parseInt(subparts[1], 10) * 1000;\n                  break;\n                case 'attempts':\n                  self.attempts = parseInt(subparts[1], 10);\n                  break;\n                case 'edns0':\n                  self.edns = true;\n                  break;\n              }\n            }\n            break;\n        }\n      }\n    });\n\n    self._nsReady = true;\n    self._checkReady();\n  });\n};\n\nPlatform.prototype._parseHosts = function(hostsfile) {\n  var self = this;\n\n  fs.readFile(hostsfile, 'ascii', function(err, file) {\n    var toStore = {};\n    if (err) {\n      throw err;\n    }\n\n    file.split(/\\n/).forEach(function(line) {\n      var i, parts, ip, revip, kind;\n      line = line.replace(/^\\s+|\\s+$/g, '');\n      if (!line.match(/^#/)) {\n        parts = line.split(/\\s+/);\n        ip = parts[0];\n        parts = parts.slice(1);\n        kind = net.isIP(ip);\n\n        if (parts.length && ip && kind) {\n          /* IP -> Domain */\n          revip = utils.reverseIP(ip);\n          parts.forEach(function(domain) {\n            var r = toStore[revip];\n            if (!r)\n              r = toStore[revip] = {};\n            var t = r[PTR];\n            if (!t)\n              t = r[PTR] = [];\n            t.push({\n              type: PTR,\n              class: 1,\n              name: revip,\n              data: domain,\n              ttl: Infinity\n            });\n          });\n\n          /* Domain -> IP */\n          parts.forEach(function(domain) {\n            var r = toStore[domain.toLowerCase()];\n            if (!r) {\n              r = toStore[domain.toLowerCase()] = {};\n            }\n            var type = kind === 4 ? A : AAAA;\n            var t = r[type];\n            if (!t)\n              t = r[type] = [];\n            t.push({\n              type: type,\n              name: domain.toLowerCase(),\n              address: ip,\n              ttl: Infinity\n            });\n          });\n        }\n      }\n    });\n\n    Object.keys(toStore).forEach(function (key) {\n      self.hosts._store.set(self.hosts._zone, key, toStore[key]);\n    });\n    self._hostsReady = true;\n    self._checkReady();\n  });\n};\n\nmodule.exports = new Platform();\n","/home/travis/build/npmtest/node-npmtest-native-dns/node_modules/native-dns-cache/index.js":"module.exports = require('./cache');\nmodule.exports.MemoryStore = require('./memory').MemoryStore;\nmodule.exports.Lookup = require('./lookup').Lookup;\nmodule.exports.is_absolute = require('./lookup').is_absolute;\nmodule.exports.ensure_absolute = require('./lookup').ensure_absolute;\n","/home/travis/build/npmtest/node-npmtest-native-dns/node_modules/native-dns-cache/cache.js":"// Copyright 2012 Timothy J Fontaine <tjfontaine@gmail.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE\n\n'use strict';\n\nvar MemoryStore = require('./memory').MemoryStore;\nvar utils = require('./lookup');\nvar Lookup = utils.Lookup;\nvar util = require('util');\nvar Heap = require('binaryheap');\n\nvar MemoryStoreExpire = function (store, zone, opts) {\n  opts = opts || {};\n  this._store = store;\n  this._zone = zone;\n  this._max_keys = opts.max_keys;\n  this._ttl = new Heap(true);\n};\n\nMemoryStoreExpire.prototype.get = function (domain, key, cb) {\n  var self = this;\n  this._store.get(domain, key, function (err, results) {\n    var i, j, type, record;\n    var nresults = {};\n    var now = Date.now();\n\n    for (i in results) {\n      type = results[i];\n      for (j in type) {\n        record = type[j];\n        record.ttl = Math.round((record._ttl_expires - now) / 1000)\n        if (record.ttl > 0) {\n          if (!nresults[i]) {\n            nresults[i] = [];\n          }\n          nresults[i].push(record);\n        } else {\n          self._ttl.remove(record);\n          self._store.delete(self._zone, record.name, record.type, function () {});\n        }\n      }\n    }\n\n    cb(err, nresults);\n  });\n};\n\nMemoryStoreExpire.prototype.set = function (domain, key, data, cb) {\n  var i, j, type, record, expires;\n  var self = this;\n  var now = Date.now();\n\n  key = utils.ensure_absolute(key);\n\n  for (i in data) {\n    type = data[i];\n    for (j in type) {\n      record = type[j];\n      expires = (record.ttl * 1000) + now;\n      record._ttl_expires = expires;\n      self._ttl.insert(record, expires);\n    }\n  }\n\n  while (this._ttl.length > this._max_keys) {\n    var record = this._ttl.pop();\n    this._store.delete(this._zone, record.name, record.type);\n  }\n\n  this._store.set(domain, key, data, function (err, results) {\n    if (cb)\n      cb(err, results);\n  });\n};\n\nMemoryStoreExpire.prototype.delete = function (domain, key, type, cb) {\n  if (!cb) {\n    cb = type;\n    type = undefined;\n  }\n\n  var self = this;\n\n  this._store.get(domain, utils.ensure_absolute(key), function (gerr, gresults) {\n    var i, j, ktype, record;\n\n    for (i in gresults) {\n      ktype = gresults[i];\n      for (j in ktype) {\n        record = ktype[j];\n        self._ttl.remove(record);\n      }\n    }\n\n    if (!gresults) {\n      if (cb)\n        cb(gerr, gresults);\n      return;\n    }\n\n    self._store.delete(domain, key, type, function (err, results) {\n      if (cb)\n        cb(err, results);\n    });\n  });\n};\n\nvar Cache = module.exports = function (opts) {\n  opts = opts || {};\n  this._zone = '.' || opts.zone;\n  this._store = undefined;\n  this.purge = function () {\n    this._store = new MemoryStoreExpire(opts.store || new MemoryStore(), this._zone, opts);\n  }\n  this.purge();\n};\n\nCache.prototype.store = function (packet) {\n  var self = this;\n  var c = {};\n\n  function each(record) {\n    var r = c[record.name.toLowerCase()];\n    var t;\n\n    if (!r)\n      r = c[record.name.toLowerCase()] = {};\n\n    t = r[record.type];\n\n    if (!t)\n      t = r[record.type] = [];\n\n    t.push(record);\n  }\n\n  packet.answer.forEach(each);\n  packet.authority.forEach(each);\n  packet.additional.forEach(each);  \n\n  Object.keys(c).forEach(function (key) {\n    self._store.set(self._zone, utils.ensure_absolute(key), c[key]);\n  });\n};\n\nCache.prototype.lookup = function (question, cb) {\n  var self = this;\n  Lookup(this._store, this._zone, question, function (err, results) {\n    var i, record, found = false;\n\n    for (i in results) {\n      record = results[i];\n      if (record.type == question.type) {\n        found = true;\n        break;\n      }\n    }\n\n    if (results && !found) {\n      self._store.delete(self._zone, utils.ensure_absolute(question.name));\n      results.forEach(function (rr) {\n        self._store.delete(self._zone, utils.ensure_absolute(rr.name));\n      });\n      results = null;\n    }\n\n    cb(results);\n  });\n};\n","/home/travis/build/npmtest/node-npmtest-native-dns/node_modules/native-dns-cache/memory.js":"// Copyright 2012 Timothy J Fontaine <tjfontaine@gmail.com>\n// \n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\n'use strict';\n\nvar MemoryStore = exports.MemoryStore = function (opts) {\n  this._store = {};\n};\n\nMemoryStore.prototype.get = function (domain, key, cb) {\n  var d = domain.toLowerCase();\n  var k = key.toLowerCase();\n  var result = this._store[d];\n\n  if (result)\n    result = result[k];\n\n  process.nextTick(function () {\n    cb(null, result);\n  });\n};\n\nMemoryStore.prototype.set = function (domain, key, data, cb) {\n  var d = domain.toLowerCase();\n  var k = key.toLowerCase();\n  var result_domain = this._store[d];\n\n  if (!result_domain)\n    result_domain = this._store[d] = {};\n\n  result_domain[k] = data;\n\n  if (cb) {\n    process.nextTick(function () {\n      cb(null, data);\n    });\n  }\n};\n\nMemoryStore.prototype.delete = function (domain, key, type, cb) {\n  var d, k;\n\n  if (!cb) {\n    cb = type;\n    type = undefined;\n  }\n\n  if (!cb) {\n    cb = key;\n    type = undefined;\n  }\n\n  d = this._store[domain.toLowerCase()];\n\n  if (d && key)\n    k = d[key.toLowerCase()];\n\n  if (domain && key && type) {\n    if (d && k) {\n      delete k[type];\n    }\n  } else if (domain && key) {\n    if (d) {\n      delete d[k];\n    }\n  } else if (domain) {\n    if (d) {\n      delete this._store[domain.toLowerCase()];\n    }\n  }\n\n  if (cb) {\n    process.nextTick(function () {\n      cb(null, domain);\n    });\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-native-dns/node_modules/native-dns-cache/lookup.js":"// Copyright 2012 Timothy J Fontaine <tjfontaine@gmail.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE\n\nvar dgram = require('dgram'),\n    EventEmitter = require('events').EventEmitter,\n    net = require('net'),\n    util = require('util');\n\nvar is_absolute = exports.is_absolute = function (f) {\n  return f && /\\.$/.test(f);\n};\n\nvar ensure_absolute = exports.ensure_absolute = function (f) {\n  if (!is_absolute(f))\n    return f += '.';\n  return f;\n};\n\nvar CNAME = require('native-dns-packet').consts.NAME_TO_QTYPE.CNAME;\n\nvar Lookup = exports.Lookup = function (store, zone, question, cb) {\n  if (!(this instanceof Lookup))\n    return new Lookup(store, zone, question, cb);\n\n  this.store = store;\n  this.zone = zone;\n  this.cb = cb;\n  this.question = question;\n  this.results = [];\n  this.wildcard = undefined;\n\n  this.name = ensure_absolute(question.name);\n\n  this.store.get(this.zone, this.name, this.lookup.bind(this));\n};\n\nLookup.prototype.send = function (err) {\n  this.cb(err, this.results);\n};\n\nLookup.prototype.lookup = function (err, results) {\n  var type, ret, name, self = this;\n\n  if (err)\n    return this.send(err);\n\n  if (!results) {\n    if (!this.wildcard)\n      this.wildcard = this.question.name;\n\n    if (this.wildcard.toLowerCase() == this.zone.toLowerCase())\n      return this.send();\n\n    name = this.wildcard = this.wildcard.split('.').splice(1).join('.');\n\n    // 'com.'.split('.').splice(1) will return empty string, we're at the end\n    if (!this.wildcard)\n      return this.send();\n\n    name = '*.' + name;\n  } else if (results[this.question.type]) {\n    type = this.question.type;\n    ret = results;\n  } else if (results[CNAME]) {\n    type = CNAME;\n    ret = results;\n    this.name = name = results[CNAME][0].data\n  }\n\n  if (ret) {\n    ret = ret[type];\n    ret.forEach(function (r) {\n      var rr, k;\n\n      if (self.wildcard && /^\\*/.test(r.name)) {\n        rr = {};\n        for (k in r) {\n          rr[k] = r[k];\n        }\n        rr.name = self.name;\n      } else {\n        rr = r;\n      }\n\n      self.results.push(rr);\n    });\n  }\n\n  if (name)\n    this.store.get(this.zone, ensure_absolute(name), this.lookup.bind(this));\n  else\n    this.send();\n};\n","/home/travis/build/npmtest/node-npmtest-native-dns/node_modules/native-dns-packet/index.js":"module.exports = require('./packet');\nmodule.exports.consts = require('./consts');\n","/home/travis/build/npmtest/node-npmtest-native-dns/node_modules/native-dns-packet/packet.js":"// Copyright 2011 Timothy J Fontaine <tjfontaine@gmail.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE\n\n// TODO: change the default UDP packet size that node-dns sends\n//       from 4096 to conform to these:\n//       - [requestor's payload size](https://tools.ietf.org/html/rfc6891#section-6.2.3)\n//       - [responders's payload size](https://tools.ietf.org/html/rfc6891#section-6.2.4)\n\n'use strict';\n\nvar consts = require('./consts'),\n    BufferCursor = require('buffercursor'),\n    BufferCursorOverflow = BufferCursor.BufferCursorOverflow,\n    ipaddr = require('ipaddr.js'),\n    assert = require('assert'),\n    util = require('util');\n\nfunction assertUndefined(val, msg) {\n  assert(typeof val != 'undefined', msg);\n}\n\nvar Packet = module.exports = function() {\n  this.header = {\n    id: 0,\n    qr: 0,\n    opcode: 0,\n    aa: 0,\n    tc: 0,\n    rd: 1,\n    ra: 0,\n    res1: 0,\n    res2: 0,\n    res3: 0,\n    rcode: 0\n  };\n  this.question = [];\n  this.answer = [];\n  this.authority = [];\n  this.additional = [];\n  this.edns_options = [];   // TODO: DEPRECATED! Use `.edns.options` instead!\n  this.payload = undefined; // TODO: DEPRECATED! Use `.edns.payload` instead!\n};\n\nvar LABEL_POINTER = 0xC0;\n\nvar isPointer = function(len) {\n  return (len & LABEL_POINTER) === LABEL_POINTER;\n};\n\nfunction nameUnpack(buff) {\n  var len, comp, end, pos, part, combine = '';\n\n  len = buff.readUInt8();\n  comp = false;\n  end = buff.tell();\n\n  while (len !== 0) {\n    if (isPointer(len)) {\n      len -= LABEL_POINTER;\n      len = len << 8;\n      pos = len + buff.readUInt8();\n      if (!comp)\n        end = buff.tell();\n      buff.seek(pos);\n      len = buff.readUInt8();\n      comp = true;\n      continue;\n    }\n\n    part = buff.toString('ascii', len);\n\n    if (combine.length)\n      combine = combine + '.' + part;\n    else\n      combine = part;\n\n    len = buff.readUInt8();\n\n    if (!comp)\n      end = buff.tell();\n  }\n\n  buff.seek(end);\n\n  return combine;\n}\n\nfunction namePack(str, buff, index) {\n  var offset, dot, part;\n\n  while (str) {\n    if (index[str]) {\n      offset = (LABEL_POINTER << 8) + index[str];\n      buff.writeUInt16BE(offset);\n      break;\n    } else {\n      index[str] = buff.tell();\n      dot = str.indexOf('.');\n      if (dot > -1) {\n        part = str.slice(0, dot);\n        str = str.slice(dot + 1);\n      } else {\n        part = str;\n        str = undefined;\n      }\n      buff.writeUInt8(part.length);\n      buff.write(part, part.length, 'ascii');\n    }\n  }\n\n  if (!str) {\n    buff.writeUInt8(0);\n  }\n}\n\nvar\n  WRITE_HEADER              = 100001,\n  WRITE_TRUNCATE            = 100002,\n  WRITE_QUESTION            = 100003,\n  WRITE_RESOURCE_RECORD     = 100004,\n  WRITE_RESOURCE_WRITE      = 100005,\n  WRITE_RESOURCE_DONE       = 100006,\n  WRITE_RESOURCE_END        = 100007,\n  WRITE_EDNS                = 100008,\n  WRITE_END                 = 100009,\n  WRITE_A     = consts.NAME_TO_QTYPE.A,\n  WRITE_AAAA  = consts.NAME_TO_QTYPE.AAAA,\n  WRITE_NS    = consts.NAME_TO_QTYPE.NS,\n  WRITE_CNAME = consts.NAME_TO_QTYPE.CNAME,\n  WRITE_PTR   = consts.NAME_TO_QTYPE.PTR,\n  WRITE_SPF   = consts.NAME_TO_QTYPE.SPF,\n  WRITE_MX    = consts.NAME_TO_QTYPE.MX,\n  WRITE_SRV   = consts.NAME_TO_QTYPE.SRV,\n  WRITE_TXT   = consts.NAME_TO_QTYPE.TXT,\n  WRITE_SOA   = consts.NAME_TO_QTYPE.SOA,\n  WRITE_OPT   = consts.NAME_TO_QTYPE.OPT,\n  WRITE_NAPTR = consts.NAME_TO_QTYPE.NAPTR,\n  WRITE_TLSA  = consts.NAME_TO_QTYPE.TLSA;\n\nfunction writeHeader(buff, packet) {\n  assert(packet.header, 'Packet requires \"header\"');\n  buff.writeUInt16BE(packet.header.id & 0xFFFF);\n  var val = 0;\n  val += (packet.header.qr << 15) & 0x8000;\n  val += (packet.header.opcode << 11) & 0x7800;\n  val += (packet.header.aa << 10) & 0x400;\n  val += (packet.header.tc << 9) & 0x200;\n  val += (packet.header.rd << 8) & 0x100;\n  val += (packet.header.ra << 7) & 0x80;\n  val += (packet.header.res1 << 6) & 0x40;\n  val += (packet.header.res2 << 5) & 0x20;\n  val += (packet.header.res3 << 4) & 0x10;\n  val += packet.header.rcode & 0xF;\n  buff.writeUInt16BE(val & 0xFFFF);\n  assert(packet.question.length == 1, 'DNS requires one question');\n  // aren't used\n  buff.writeUInt16BE(1);\n  // answer offset 6\n  buff.writeUInt16BE(packet.answer.length & 0xFFFF);\n  // authority offset 8\n  buff.writeUInt16BE(packet.authority.length & 0xFFFF);\n  // additional offset 10\n  buff.writeUInt16BE(packet.additional.length & 0xFFFF);\n  return WRITE_QUESTION;\n}\n\nfunction writeTruncate(buff, packet, section, val) {\n  // XXX FIXME TODO truncation is currently done wrong.\n  // Quote rfc2181 section 9\n  // The TC bit should not be set merely because some extra information\n  // could have been included, but there was insufficient room.  This\n  // includes the results of additional section processing.  In such cases\n  // the entire RRSet that will not fit in the response should be omitted,\n  // and the reply sent as is, with the TC bit clear.  If the recipient of\n  // the reply needs the omitted data, it can construct a query for that\n  // data and send that separately.\n  //\n  // TODO IOW only set TC if we hit it in ANSWERS otherwise make sure an\n  // entire RRSet is removed during a truncation.\n  var pos;\n\n  buff.seek(2);\n  val = buff.readUInt16BE();\n  val |= (1 << 9) & 0x200;\n  buff.seek(2);\n  buff.writeUInt16BE(val);\n  switch (section) {\n    case 'answer':\n      pos = 6;\n      // seek to authority and clear it and additional out\n      buff.seek(8);\n      buff.writeUInt16BE(0);\n      buff.writeUInt16BE(0);\n      break;\n    case 'authority':\n      pos = 8;\n      // seek to additional and clear it out\n      buff.seek(10);\n      buff.writeUInt16BE(0);\n      break;\n    case 'additional':\n      pos = 10;\n      break;\n  }\n  buff.seek(pos);\n  buff.writeUInt16BE(count - 1); // TODO: count not defined!\n  buff.seek(last_resource);      // TODO: last_resource not defined!\n  return WRITE_END;\n}\n\nfunction writeQuestion(buff, val, label_index) {\n  assert(val, 'Packet requires a question');\n  assertUndefined(val.name, 'Question requires a \"name\"');\n  assertUndefined(val.type, 'Question requires a \"type\"');\n  assertUndefined(val.class, 'Questionn requires a \"class\"');\n  namePack(val.name, buff, label_index);\n  buff.writeUInt16BE(val.type & 0xFFFF);\n  buff.writeUInt16BE(val.class & 0xFFFF);\n  return WRITE_RESOURCE_RECORD;\n}\n\nfunction writeResource(buff, val, label_index, rdata) {\n  assert(val, 'Resource must be defined');\n  assertUndefined(val.name, 'Resource record requires \"name\"');\n  assertUndefined(val.type, 'Resource record requires \"type\"');\n  assertUndefined(val.class, 'Resource record requires \"class\"');\n  assertUndefined(val.ttl, 'Resource record requires \"ttl\"');\n  namePack(val.name, buff, label_index);\n  buff.writeUInt16BE(val.type & 0xFFFF);\n  buff.writeUInt16BE(val.class & 0xFFFF);\n  buff.writeUInt32BE(val.ttl & 0xFFFFFFFF);\n  rdata.pos = buff.tell();\n  buff.writeUInt16BE(0); // if there is rdata, then this value will be updated\n                         // to the correct value by 'writeResourceDone'\n  return val.type;\n}\n\nfunction writeResourceDone(buff, rdata) {\n  var pos = buff.tell();\n  buff.seek(rdata.pos);\n  buff.writeUInt16BE(pos - rdata.pos - 2);\n  buff.seek(pos);\n  return WRITE_RESOURCE_RECORD;\n}\n\nfunction writeIp(buff, val) {\n  //TODO XXX FIXME -- assert that address is of proper type\n  assertUndefined(val.address, 'A/AAAA record requires \"address\"');\n  val = ipaddr.parse(val.address).toByteArray();\n  val.forEach(function(b) {\n    buff.writeUInt8(b);\n  });\n  return WRITE_RESOURCE_DONE;\n}\n\nfunction writeCname(buff, val, label_index) {\n  assertUndefined(val.data, 'NS/CNAME/PTR record requires \"data\"');\n  namePack(val.data, buff, label_index);\n  return WRITE_RESOURCE_DONE;\n}\n\n// For <character-string> see: http://tools.ietf.org/html/rfc1035#section-3.3\n// For TXT: http://tools.ietf.org/html/rfc1035#section-3.3.14\nfunction writeTxt(buff, val) {\n  //TODO XXX FIXME -- split on max char string and loop\n  assertUndefined(val.data, 'TXT record requires \"data\"');\n  for (var i=0,len=val.data.length; i<len; i++) {\n    var dataLen = Buffer.byteLength(val.data[i], 'utf8');\n    buff.writeUInt8(dataLen);\n    buff.write(val.data[i], dataLen, 'utf8');\n  }\n  return WRITE_RESOURCE_DONE;\n}\n\nfunction writeMx(buff, val, label_index) {\n  assertUndefined(val.priority, 'MX record requires \"priority\"');\n  assertUndefined(val.exchange, 'MX record requires \"exchange\"');\n  buff.writeUInt16BE(val.priority & 0xFFFF);\n  namePack(val.exchange, buff, label_index);\n  return WRITE_RESOURCE_DONE;\n}\n\n// SRV: https://tools.ietf.org/html/rfc2782\n// TODO: SRV fixture failing for '_xmpp-server._tcp.gmail.com.srv.js'\nfunction writeSrv(buff, val, label_index) {\n  assertUndefined(val.priority, 'SRV record requires \"priority\"');\n  assertUndefined(val.weight, 'SRV record requires \"weight\"');\n  assertUndefined(val.port, 'SRV record requires \"port\"');\n  assertUndefined(val.target, 'SRV record requires \"target\"');\n  buff.writeUInt16BE(val.priority & 0xFFFF);\n  buff.writeUInt16BE(val.weight & 0xFFFF);\n  buff.writeUInt16BE(val.port & 0xFFFF);\n  namePack(val.target, buff, label_index);\n  return WRITE_RESOURCE_DONE;\n}\n\nfunction writeSoa(buff, val, label_index) {\n  assertUndefined(val.primary, 'SOA record requires \"primary\"');\n  assertUndefined(val.admin, 'SOA record requires \"admin\"');\n  assertUndefined(val.serial, 'SOA record requires \"serial\"');\n  assertUndefined(val.refresh, 'SOA record requires \"refresh\"');\n  assertUndefined(val.retry, 'SOA record requires \"retry\"');\n  assertUndefined(val.expiration, 'SOA record requires \"expiration\"');\n  assertUndefined(val.minimum, 'SOA record requires \"minimum\"');\n  namePack(val.primary, buff, label_index);\n  namePack(val.admin, buff, label_index);\n  buff.writeUInt32BE(val.serial & 0xFFFFFFFF);\n  buff.writeInt32BE(val.refresh & 0xFFFFFFFF);\n  buff.writeInt32BE(val.retry & 0xFFFFFFFF);\n  buff.writeInt32BE(val.expiration & 0xFFFFFFFF);\n  buff.writeInt32BE(val.minimum & 0xFFFFFFFF);\n  return WRITE_RESOURCE_DONE;\n}\n\n// http://tools.ietf.org/html/rfc3403#section-4.1\nfunction writeNaptr(buff, val, label_index) {\n  assertUndefined(val.order, 'NAPTR record requires \"order\"');\n  assertUndefined(val.preference, 'NAPTR record requires \"preference\"');\n  assertUndefined(val.flags, 'NAPTR record requires \"flags\"');\n  assertUndefined(val.service, 'NAPTR record requires \"service\"');\n  assertUndefined(val.regexp, 'NAPTR record requires \"regexp\"');\n  assertUndefined(val.replacement, 'NAPTR record requires \"replacement\"');\n  buff.writeUInt16BE(val.order & 0xFFFF);\n  buff.writeUInt16BE(val.preference & 0xFFFF);\n  buff.writeUInt8(val.flags.length);\n  buff.write(val.flags, val.flags.length, 'ascii');\n  buff.writeUInt8(val.service.length);\n  buff.write(val.service, val.service.length, 'ascii');\n  buff.writeUInt8(val.regexp.length);\n  buff.write(val.regexp, val.regexp.length, 'ascii');\n  namePack(val.replacement, buff, label_index);\n  return WRITE_RESOURCE_DONE;\n}\n\n// https://tools.ietf.org/html/rfc6698\nfunction writeTlsa(buff, val) {\n  assertUndefined(val.usage, 'TLSA record requires \"usage\"');\n  assertUndefined(val.selector, 'TLSA record requires \"selector\"');\n  assertUndefined(val.matchingtype, 'TLSA record requires \"matchingtype\"');\n  assertUndefined(val.buff, 'TLSA record requires \"buff\"');\n  buff.writeUInt8(val.usage);\n  buff.writeUInt8(val.selector);\n  buff.writeUInt8(val.matchingtype);\n  buff.copy(val.buff);\n  return WRITE_RESOURCE_DONE;\n}\n\nfunction makeEdns(packet) {\n  packet.edns = {\n    name: '',\n    type: consts.NAME_TO_QTYPE.OPT,\n    class: packet.payload,\n    options: [],\n    ttl: 0\n  };\n  packet.edns_options = packet.edns.options; // TODO: 'edns_options' is DEPRECATED!\n  packet.additional.push(packet.edns);\n  return WRITE_HEADER;\n}\n\nfunction writeOpt(buff, val) {\n  var opt;\n  for (var i=0, len=val.options.length; i<len; i++) {\n    opt = val.options[i];\n    buff.writeUInt16BE(opt.code);\n    buff.writeUInt16BE(opt.data.length);\n    buff.copy(opt.data);\n  }\n  return WRITE_RESOURCE_DONE;\n}\n\nPacket.write = function(buff, packet) {\n  var state = WRITE_HEADER,\n      val,\n      section,\n      count,\n      rdata,\n      last_resource,\n      label_index = {};\n\n  buff = new BufferCursor(buff);\n\n  // the existence of 'edns' in a packet indicates that a proper OPT record exists\n  // in 'additional' and that all of the other fields in packet (that are parsed by\n  // 'parseOpt') are properly set. If it does not exist, we assume that the user\n  // is requesting that we create one for them.\n  if (typeof packet.edns_version !== 'undefined' && typeof packet.edns === \"undefined\")\n    state = makeEdns(packet);\n\n  // TODO: this is unnecessarily inefficient. rewrite this using a\n  //       function table instead. (same for Packet.parse too).\n  while (true) {\n    try {\n      switch (state) {\n        case WRITE_HEADER:\n          state = writeHeader(buff, packet);\n          break;\n        case WRITE_TRUNCATE:\n          state = writeTruncate(buff, packet, section, last_resource);\n          break;\n        case WRITE_QUESTION:\n          state = writeQuestion(buff, packet.question[0], label_index);\n          section = 'answer';\n          count = 0;\n          break;\n        case WRITE_RESOURCE_RECORD:\n          last_resource = buff.tell();\n          if (packet[section].length == count) {\n            switch (section) {\n              case 'answer':\n                section = 'authority';\n                state = WRITE_RESOURCE_RECORD;\n                break;\n              case 'authority':\n                section = 'additional';\n                state = WRITE_RESOURCE_RECORD;\n                break;\n              case 'additional':\n                state = WRITE_END;\n                break;\n            }\n            count = 0;\n          } else {\n            state = WRITE_RESOURCE_WRITE;\n          }\n          break;\n        case WRITE_RESOURCE_WRITE:\n          rdata = {};\n          val = packet[section][count];\n          state = writeResource(buff, val, label_index, rdata);\n          break;\n        case WRITE_RESOURCE_DONE:\n          count += 1;\n          state = writeResourceDone(buff, rdata);\n          break;\n        case WRITE_A:\n        case WRITE_AAAA:\n          state = writeIp(buff, val);\n          break;\n        case WRITE_NS:\n        case WRITE_CNAME:\n        case WRITE_PTR:\n          state = writeCname(buff, val, label_index);\n          break;\n        case WRITE_SPF:\n        case WRITE_TXT:\n          state = writeTxt(buff, val);\n          break;\n        case WRITE_MX:\n          state = writeMx(buff, val, label_index);\n          break;\n        case WRITE_SRV:\n          state = writeSrv(buff, val, label_index);\n          break;\n        case WRITE_SOA:\n          state = writeSoa(buff, val, label_index);\n          break;\n        case WRITE_OPT:\n          state = writeOpt(buff, val);\n          break;\n        case WRITE_NAPTR:\n          state = writeNaptr(buff, val, label_index);\n          break;\n        case WRITE_TLSA:\n          state = writeTlsa(buff, val);\n          break;\n        case WRITE_END:\n          return buff.tell();\n        default:\n          if (typeof val.data !== 'object')\n            throw new Error('Packet.write Unknown State: ' + state);\n          // write unhandled RR type\n          buff.copy(val.data);\n          state = WRITE_RESOURCE_DONE;\n      }\n    } catch (e) {\n      if (e instanceof BufferCursorOverflow) {\n        state = WRITE_TRUNCATE;\n      } else {\n        throw e;\n      }\n    }\n  }\n};\n\nfunction parseHeader(msg, packet) {\n  packet.header.id = msg.readUInt16BE();\n  var val = msg.readUInt16BE();\n  packet.header.qr = (val & 0x8000) >> 15;\n  packet.header.opcode = (val & 0x7800) >> 11;\n  packet.header.aa = (val & 0x400) >> 10;\n  packet.header.tc = (val & 0x200) >> 9;\n  packet.header.rd = (val & 0x100) >> 8;\n  packet.header.ra = (val & 0x80) >> 7;\n  packet.header.res1 = (val & 0x40) >> 6;\n  packet.header.res2 = (val & 0x20) >> 5;\n  packet.header.res3 = (val & 0x10) >> 4;\n  packet.header.rcode = (val & 0xF);\n  packet.question = new Array(msg.readUInt16BE());\n  packet.answer = new Array(msg.readUInt16BE());\n  packet.authority = new Array(msg.readUInt16BE());\n  packet.additional = new Array(msg.readUInt16BE());\n  return PARSE_QUESTION;\n}\n\nfunction parseQuestion(msg, packet) {\n  var val = {};\n  val.name = nameUnpack(msg);\n  val.type = msg.readUInt16BE();\n  val.class = msg.readUInt16BE();\n  packet.question[0] = val;\n  assert(packet.question.length === 1);\n  // TODO handle qdcount > 1 in practice no one sends this\n  return PARSE_RESOURCE_RECORD;\n}\n\nfunction parseRR(msg, val, rdata) {\n  val.name = nameUnpack(msg);\n  val.type = msg.readUInt16BE();\n  val.class = msg.readUInt16BE();\n  val.ttl = msg.readUInt32BE();\n  rdata.len = msg.readUInt16BE();\n  return val.type;\n}\n\nfunction parseA(val, msg) {\n  var address = '' +\n    msg.readUInt8() +\n    '.' + msg.readUInt8() +\n    '.' + msg.readUInt8() +\n    '.' + msg.readUInt8();\n  val.address = address;\n  return PARSE_RESOURCE_DONE;\n}\n\nfunction parseAAAA(val, msg) {\n  var address = '';\n  var compressed = false;\n\n  for (var i = 0; i < 8; i++) {\n    if (i > 0) address += ':';\n    // TODO zero compression\n    address += msg.readUInt16BE().toString(16);\n  }\n  val.address = address;\n  return PARSE_RESOURCE_DONE;\n}\n\nfunction parseCname(val, msg) {\n  val.data = nameUnpack(msg);\n  return PARSE_RESOURCE_DONE;\n}\n\nfunction parseTxt(val, msg, rdata) {\n  val.data = [];\n  var end = msg.tell() + rdata.len;\n  while (msg.tell() != end) {\n    var len = msg.readUInt8();\n    val.data.push(msg.toString('utf8', len));\n  }\n  return PARSE_RESOURCE_DONE;\n}\n\nfunction parseMx(val, msg, rdata) {\n  val.priority = msg.readUInt16BE();\n  val.exchange = nameUnpack(msg);\n  return PARSE_RESOURCE_DONE;\n}\n\n// TODO: SRV fixture failing for '_xmpp-server._tcp.gmail.com.srv.js'\n//       https://tools.ietf.org/html/rfc2782\nfunction parseSrv(val, msg) {\n  val.priority = msg.readUInt16BE();\n  val.weight = msg.readUInt16BE();\n  val.port = msg.readUInt16BE();\n  val.target = nameUnpack(msg);\n  return PARSE_RESOURCE_DONE;\n}\n\nfunction parseSoa(val, msg) {\n  val.primary = nameUnpack(msg);\n  val.admin = nameUnpack(msg);\n  val.serial = msg.readUInt32BE();\n  val.refresh = msg.readInt32BE();\n  val.retry = msg.readInt32BE();\n  val.expiration = msg.readInt32BE();\n  val.minimum = msg.readInt32BE();\n  return PARSE_RESOURCE_DONE;\n}\n\n// http://tools.ietf.org/html/rfc3403#section-4.1\nfunction parseNaptr(val, msg) {\n  val.order = msg.readUInt16BE();\n  val.preference = msg.readUInt16BE();\n  var len = msg.readUInt8();\n  val.flags = msg.toString('ascii', len);\n  len = msg.readUInt8();\n  val.service = msg.toString('ascii', len);\n  len = msg.readUInt8();\n  val.regexp = msg.toString('ascii', len);\n  val.replacement = nameUnpack(msg);\n  return PARSE_RESOURCE_DONE;\n}\n\nfunction parseTlsa(val, msg, rdata) {\n  val.usage = msg.readUInt8();\n  val.selector = msg.readUInt8();\n  val.matchingtype = msg.readUInt8();\n  val.buff = msg.slice(rdata.len - 3).buffer; // 3 because of the 3 UInt8s above.\n  return PARSE_RESOURCE_DONE;\n}\n\n// https://tools.ietf.org/html/rfc6891#section-6.1.2\n// https://tools.ietf.org/html/rfc2671#section-4.4\n//       - [payload size selection](https://tools.ietf.org/html/rfc6891#section-6.2.5)\nfunction parseOpt(val, msg, rdata, packet) {\n  // assert first entry in additional\n  rdata.buf = msg.slice(rdata.len);\n\n  val.rcode = ((val.ttl & 0xFF000000) >> 20) + packet.header.rcode;\n  val.version = (val.ttl >> 16) & 0xFF;\n  val.do = (val.ttl >> 15) & 1;\n  val.z = val.ttl & 0x7F;\n  val.options = [];\n\n  packet.edns = val;\n  packet.edns_version = val.version; // TODO: return BADVERS for unsupported version! (Section 6.1.3)\n\n  // !! BEGIN DEPRECATION NOTICE !!\n  // THESE FIELDS MAY BE REMOVED IN THE FUTURE!\n  packet.edns_options = val.options;\n  packet.payload = val.class;\n  // !! END DEPRECATION NOTICE !!\n\n  while (!rdata.buf.eof()) {\n    val.options.push({\n      code: rdata.buf.readUInt16BE(),\n      data: rdata.buf.slice(rdata.buf.readUInt16BE()).buffer\n    });\n  }\n  return PARSE_RESOURCE_DONE;\n}\n\nvar\n  PARSE_HEADER          = 100000,\n  PARSE_QUESTION        = 100001,\n  PARSE_RESOURCE_RECORD = 100002,\n  PARSE_RR_UNPACK       = 100003,\n  PARSE_RESOURCE_DONE   = 100004,\n  PARSE_END             = 100005,\n  PARSE_A     = consts.NAME_TO_QTYPE.A,\n  PARSE_NS    = consts.NAME_TO_QTYPE.NS,\n  PARSE_CNAME = consts.NAME_TO_QTYPE.CNAME,\n  PARSE_SOA   = consts.NAME_TO_QTYPE.SOA,\n  PARSE_PTR   = consts.NAME_TO_QTYPE.PTR,\n  PARSE_MX    = consts.NAME_TO_QTYPE.MX,\n  PARSE_TXT   = consts.NAME_TO_QTYPE.TXT,\n  PARSE_AAAA  = consts.NAME_TO_QTYPE.AAAA,\n  PARSE_SRV   = consts.NAME_TO_QTYPE.SRV,\n  PARSE_NAPTR = consts.NAME_TO_QTYPE.NAPTR,\n  PARSE_OPT   = consts.NAME_TO_QTYPE.OPT,\n  PARSE_SPF   = consts.NAME_TO_QTYPE.SPF,\n  PARSE_TLSA  = consts.NAME_TO_QTYPE.TLSA;\n  \n\nPacket.parse = function(msg) {\n  var state,\n      pos,\n      val,\n      rdata,\n      section,\n      count;\n\n  var packet = new Packet();\n\n  pos = 0;\n  state = PARSE_HEADER;\n\n  msg = new BufferCursor(msg);\n\n  while (true) {\n    switch (state) {\n      case PARSE_HEADER:\n        state = parseHeader(msg, packet);\n        break;\n      case PARSE_QUESTION:\n        state = parseQuestion(msg, packet);\n        section = 'answer';\n        count = 0;\n        break;\n      case PARSE_RESOURCE_RECORD:\n        // console.log('PARSE_RESOURCE_RECORD: count = %d, %s.len = %d', count, section, packet[section].length);\n        if (count === packet[section].length) {\n          switch (section) {\n            case 'answer':\n              section = 'authority';\n              count = 0;\n              break;\n            case 'authority':\n              section = 'additional';\n              count = 0;\n              break;\n            case 'additional':\n              state = PARSE_END;\n              break;\n          }\n        } else {\n          state = PARSE_RR_UNPACK;\n        }\n        break;\n      case PARSE_RR_UNPACK:\n        val = {};\n        rdata = {};\n        state = parseRR(msg, val, rdata);\n        break;\n      case PARSE_RESOURCE_DONE:\n        packet[section][count++] = val;\n        state = PARSE_RESOURCE_RECORD;\n        break;\n      case PARSE_A:\n        state = parseA(val, msg);\n        break;\n      case PARSE_AAAA:\n        state = parseAAAA(val, msg);\n        break;\n      case PARSE_NS:\n      case PARSE_CNAME:\n      case PARSE_PTR:\n        state = parseCname(val, msg);\n        break;\n      case PARSE_SPF:\n      case PARSE_TXT:\n        state = parseTxt(val, msg, rdata);\n        break;\n      case PARSE_MX:\n        state = parseMx(val, msg);\n        break;\n      case PARSE_SRV:\n        state = parseSrv(val, msg);\n        break;\n      case PARSE_SOA:\n        state = parseSoa(val, msg);\n        break;\n      case PARSE_OPT:\n        state = parseOpt(val, msg, rdata, packet);\n        break;\n      case PARSE_NAPTR:\n        state = parseNaptr(val, msg);\n        break;\n      case PARSE_TLSA:\n        state = parseTlsa(val, msg, rdata);\n        break;\n      case PARSE_END:\n        return packet;\n      default:\n        //console.log(state, val);\n        val.data = msg.slice(rdata.len);\n        state = PARSE_RESOURCE_DONE;\n        break;\n    }\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-native-dns/node_modules/native-dns-packet/consts.js":"// Copyright 2011 Timothy J Fontaine <tjfontaine@gmail.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE\n\n'use strict';\n\nfunction reverse_map(src) {\n  var dst = {},\n      k;\n\n  for (k in src) {\n    if (src.hasOwnProperty(k)) {\n      dst[src[k]] = k;\n    }\n  }\n  return dst;\n}\n\n/* http://www.iana.org/assignments/dns-parameters */\nvar NAME_TO_QTYPE = exports.NAME_TO_QTYPE = {\n  A: 1,\n  NS: 2,\n  MD: 3,\n  MF: 4,\n  CNAME: 5,\n  SOA: 6,\n  MB: 7,\n  MG: 8,\n  MR: 9,\n  'NULL': 10,\n  WKS: 11,\n  PTR: 12,\n  HINFO: 13,\n  MINFO: 14,\n  MX: 15,\n  TXT: 16,\n  RP: 17,\n  AFSDB: 18,\n  X25: 19,\n  ISDN: 20,\n  RT: 21,\n  NSAP: 22,\n  'NSAP-PTR': 23,\n  SIG: 24,\n  KEY: 25,\n  PX: 26,\n  GPOS: 27,\n  AAAA: 28,\n  LOC: 29,\n  NXT: 30,\n  EID: 31,\n  NIMLOC: 32,\n  SRV: 33,\n  ATMA: 34,\n  NAPTR: 35,\n  KX: 36,\n  CERT: 37,\n  A6: 38,\n  DNAME: 39,\n  SINK: 40,\n  OPT: 41,\n  APL: 42,\n  DS: 43,\n  SSHFP: 44,\n  IPSECKEY: 45,\n  RRSIG: 46,\n  NSEC: 47,\n  DNSKEY: 48,\n  DHCID: 49,\n  NSEC3: 50,\n  NSEC3PARAM: 51,\n  TLSA: 52,\n  HIP: 55,\n  NINFO: 56,\n  RKEY: 57,\n  TALINK: 58,\n  CDS: 59,\n  SPF: 99,\n  UINFO: 100,\n  UID: 101,\n  GID: 102,\n  UNSPEC: 103,\n  TKEY: 249,\n  TSIG: 250,\n  IXFR: 251,\n  AXFR: 252,\n  MAILB: 253,\n  MAILA: 254,\n  ANY: 255,\n  URI: 256,\n  CAA: 257,\n  TA: 32768,\n  DLV: 32769\n};\nexports.QTYPE_TO_NAME = reverse_map(NAME_TO_QTYPE);\n\nexports.nameToQtype = function(n) {\n  return NAME_TO_QTYPE[n.toUpperCase()];\n};\n\nexports.qtypeToName = function(t) {\n  return exports.QTYPE_TO_NAME[t];\n};\n\nvar NAME_TO_QCLASS = exports.NAME_TO_QCLASS = {\n  IN: 1\n};\nexports.QCLASS_TO_NAME = reverse_map(NAME_TO_QCLASS);\n\nexports.FAMILY_TO_QTYPE = {\n  4: NAME_TO_QTYPE.A,\n  6: NAME_TO_QTYPE.AAAA\n};\nexports.QTYPE_TO_FAMILY = {};\nexports.QTYPE_TO_FAMILY[exports.NAME_TO_QTYPE.A] = 4;\nexports.QTYPE_TO_FAMILY[exports.NAME_TO_QTYPE.AAAA] = 6;\n\nexports.NAME_TO_RCODE = {\n  NOERROR: 0,\n  FORMERR: 1,\n  SERVFAIL: 2,\n  NOTFOUND: 3,\n  NOTIMP: 4,\n  REFUSED: 5,\n  YXDOMAIN: 6, //Name Exists when it should not\n  YXRRSET: 7, //RR Set Exists when it should not\n  NXRRSET: 8, //RR Set that should exist does not\n  NOTAUTH: 9,\n  NOTZONE: 10,\n  BADVERS: 16,\n  BADSIG: 16, // really?\n  BADKEY: 17,\n  BADTIME: 18,\n  BADMODE: 19,\n  BADNAME: 20,\n  BADALG: 21,\n  BADTRUNC: 22\n};\nexports.RCODE_TO_NAME = reverse_map(exports.NAME_TO_RCODE);\n\nexports.BADNAME = 'EBADNAME';\nexports.BADRESP = 'EBADRESP';\nexports.CONNREFUSED = 'ECONNREFUSED';\nexports.DESTRUCTION = 'EDESTRUCTION';\nexports.REFUSED = 'EREFUSED';\nexports.FORMERR = 'EFORMERR';\nexports.NODATA = 'ENODATA';\nexports.NOMEM = 'ENOMEM';\nexports.NOTFOUND = 'ENOTFOUND';\nexports.NOTIMP = 'ENOTIMP';\nexports.SERVFAIL = 'ESERVFAIL';\nexports.TIMEOUT = 'ETIMEOUT';\n","/home/travis/build/npmtest/node-npmtest-native-dns/node_modules/native-dns/lib/utils.js":"// Copyright 2012 Timothy J Fontaine <tjfontaine@gmail.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE\n\nvar dgram = require('dgram'),\n    EventEmitter = require('events').EventEmitter,\n    ipaddr = require('ipaddr.js'),\n    net = require('net'),\n    util = require('util');\n\nvar UDPSocket = exports.UDPSocket = function(socket, remote) {\n  this._socket = socket;\n  this._remote = remote;\n  this._buff = undefined;\n  this.base_size = 512;\n  this.bound = false;\n  this.unref = undefined;\n  this.ref = undefined;\n};\nutil.inherits(UDPSocket, EventEmitter);\n\nUDPSocket.prototype.buffer = function(size) {\n  this._buff = new Buffer(size);\n  return this._buff;\n};\n\nUDPSocket.prototype.send = function(len) {\n  this._socket.send(this._buff, 0, len, this._remote.port,\n                    this._remote.address);\n};\n\nUDPSocket.prototype.bind = function(type) {\n  var self = this;\n\n  if (this.bound) {\n    this.emit('ready');\n  } else {\n    this._socket = dgram.createSocket(type);\n    this._socket.on('listening', function() {\n      self.bound = true;\n      if (self._socket.unref) {\n        self.unref = function() {\n          self._socket.unref();\n        }\n        self.ref = function() {\n          self._socket.ref();\n        }\n      }\n      self.emit('ready');\n    });\n\n    this._socket.on('message', this.emit.bind(this, 'message'));\n\n    this._socket.on('close', function() {\n      self.bound = false;\n      self.emit('close');\n    });\n\n    this._socket.bind();\n  }\n};\n\nUDPSocket.prototype.close = function() {\n  this._socket.close();\n};\n\nUDPSocket.prototype.remote = function(remote) {\n  return new UDPSocket(this._socket, remote);\n};\n\nvar TCPSocket = exports.TCPSocket = function(socket) {\n  UDPSocket.call(this, socket);\n  this.base_size = 4096;\n  this._rest = undefined;\n};\nutil.inherits(TCPSocket, UDPSocket);\n\nTCPSocket.prototype.buffer = function(size) {\n  this._buff = new Buffer(size + 2);\n  return this._buff.slice(2);\n};\n\nTCPSocket.prototype.send = function(len) {\n  this._buff.writeUInt16BE(len, 0);\n  this._socket.write(this._buff.slice(0, len + 2));\n};\n\nTCPSocket.prototype.bind = function(server) {\n  var self = this;\n\n  if (this.bound) {\n    this.emit('ready');\n  } else {\n    this._socket = net.connect(server.port, server.address);\n\n    this._socket.on('connect', function() {\n      self.bound = true;\n      if (self._socket.unref) {\n        self.unref = function() {\n          self._socket.unref();\n        }\n        self.ref = function() {\n          self._socket.ref();\n        }\n      }\n      self.emit('ready');\n    });\n\n    this._socket.on('timeout', function() {\n      self.bound = false;\n      self.emit('close');\n    });\n\n    this._socket.on('close', function() {\n      self.bound = false;\n      self.emit('close');\n    });\n\n    this.catchMessages();\n  }\n};\n\nTCPSocket.prototype.catchMessages = function() {\n  var self = this;\n  this._socket.on('data', function(data) {\n    var len, tmp;\n    if (!self._rest) {\n      self._rest = data;\n    } else {\n      tmp = new Buffer(self._rest.length + data.length);\n      self._rest.copy(tmp, 0);\n      data.copy(tmp, self._rest.length);\n      self._rest = tmp;\n    }\n    while (self._rest && self._rest.length > 2) {\n      len = self._rest.readUInt16BE(0);\n      if (self._rest.length >= len + 2) {\n        self.emit('message', self._rest.slice(2, len + 2), self);\n        self._rest = self._rest.slice(len + 2);\n      } else {\n        break;\n      }\n    }\n  });\n};\n\nTCPSocket.prototype.close = function() {\n  this._socket.end();\n};\n\nTCPSocket.prototype.remote = function() {\n  return this;\n};\n\nexports.reverseIP = function(ip) {\n  var address, kind, reverseip, parts;\n  address = ipaddr.parse(ip.split(/%/)[0]);\n  kind = address.kind();\n\n  switch (kind) {\n    case 'ipv4':\n      address = address.toByteArray();\n      address.reverse();\n      reverseip = address.join('.') + '.IN-ADDR.ARPA';\n      break;\n    case 'ipv6':\n      parts = [];\n      address.toNormalizedString().split(':').forEach(function(part) {\n        var i, pad = 4 - part.length;\n        for (i = 0; i < pad; i++) {\n          part = '0' + part;\n        }\n        part.split('').forEach(function(p) {\n          parts.push(p);\n        });\n      });\n      parts.reverse();\n      reverseip = parts.join('.') + '.IP6.ARPA';\n      break;\n  }\n\n  return reverseip;\n};\n","/home/travis/build/npmtest/node-npmtest-native-dns/node_modules/native-dns/lib/server.js":"// Copyright 2011 Timothy J Fontaine <tjfontaine@gmail.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE\n\n'use strict';\n\nvar dgram = require('dgram'),\n    EventEmitter = require('events').EventEmitter,\n    net = require('net'),\n    util = require('util'),\n    UDPSocket = require('./utils').UDPSocket,\n    TCPSocket = require('./utils').TCPSocket,\n    Packet = require('./packet');\n\nvar Server = function(opts) {\n  var self = this;\n\n  this._socket.on('listening', function() {\n    self.emit('listening');\n  });\n\n  this._socket.on('close', function() {\n    self.emit('close');\n  });\n\n  this._socket.on('error', function(err) {\n    self.emit('socketError', err, self._socket);\n  });\n};\nutil.inherits(Server, EventEmitter);\n\nServer.prototype.close = function() {\n  this._socket.close();\n};\n\nServer.prototype.address = function() {\n  return this._socket.address();\n};\n\nServer.prototype.handleMessage = function(msg, remote, address) {\n  var request, response = new Packet(remote);\n\n  try {\n    request = Packet.parse(msg, remote);\n\n    request.address = address;\n\n    response.header.id = request.header.id;\n    response.header.qr = 1;\n    response.question = request.question;\n\n    this.emit('request', request, response);\n  } catch (e) {\n    this.emit('error', e, msg, response);\n  }\n};\n\nvar UDPServer = function(opts) {\n  var self = this;\n\n  this._socket = dgram.createSocket(opts.dgram_type || 'udp4');\n\n  this._socket.on('message', function(msg, remote) {\n    self.handleMessage(msg, new UDPSocket(self._socket, remote), remote);\n  });\n\n  Server.call(this, opts);\n};\nutil.inherits(UDPServer, Server);\n\nUDPServer.prototype.serve = function(port, address) {\n  this._socket.bind(port, address);\n};\n\nvar TCPServer = function(opts) {\n  var self = this;\n\n  this._socket = net.createServer(function(client) {\n    var tcp = new TCPSocket(client);\n    var address = client.address();\n    tcp.on('message', function(msg, remote) {\n      self.handleMessage(msg, tcp, address);\n    });\n    tcp.catchMessages();\n  });\n\n  Server.call(this, opts);\n};\nutil.inherits(TCPServer, Server);\n\nTCPServer.prototype.serve = function(port, address) {\n  this._socket.listen(port, address);\n};\n\nexports.createServer = function(opts) {\n  return new UDPServer(opts || {});\n};\n\nexports.createUDPServer = function(opts) {\n  return exports.createServer(opts);\n};\n\nexports.createTCPServer = function(opts) {\n  return new TCPServer(opts || {});\n};\n","/home/travis/build/npmtest/node-npmtest-native-dns/node_modules/native-dns/lib/packet.js":"// Copyright 2011 Timothy J Fontaine <tjfontaine@gmail.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE\n\n'use strict';\n\nvar NDP = require('native-dns-packet'),\n    util = require('util');\n\nvar Packet = module.exports = function(socket) {\n  NDP.call(this);\n  this.address = undefined;\n  this._socket = socket;\n};\nutil.inherits(Packet, NDP);\n\nPacket.prototype.send = function() {\n  var buff, len, size;\n\n  if (typeof(this.edns_version) !== 'undefined') {\n    size = 4096;\n  }\n\n  this.payload = size = size || this._socket.base_size;\n\n  buff = this._socket.buffer(size);\n  len = Packet.write(buff, this);\n  this._socket.send(len);\n};\n\nPacket.parse = function (msg, socket) {\n  var p = NDP.parse(msg);\n  p._socket = socket;\n  return p;\n};\n\nPacket.write = NDP.write;\n","/home/travis/build/npmtest/node-npmtest-native-dns/node_modules/native-dns/lib/client.js":"// Copyright 2011 Timothy J Fontaine <tjfontaine@gmail.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE\n\n'use strict';\n\nvar ipaddr = require('ipaddr.js'),\n    net = require('net'),\n    util = require('util'),\n    EventEmitter = require('events').EventEmitter,\n    PendingRequests = require('./pending'),\n    Packet = require('./packet'),\n    consts = require('native-dns-packet').consts,\n    utils = require('./utils'),\n    platform = require('./platform');\n\nvar A = consts.NAME_TO_QTYPE.A,\n    AAAA = consts.NAME_TO_QTYPE.AAAA,\n    MX = consts.NAME_TO_QTYPE.MX,\n    TXT = consts.NAME_TO_QTYPE.TXT,\n    NS = consts.NAME_TO_QTYPE.NS,\n    CNAME = consts.NAME_TO_QTYPE.CNAME,\n    SRV = consts.NAME_TO_QTYPE.SRV,\n    PTR = consts.NAME_TO_QTYPE.PTR,\n    TLSA = consts.NAME_TO_QTYPE.TLSA;\n\nvar debug = function() {};\n\nif (process.env.NODE_DEBUG && process.env.NODE_DEBUG.match(/dns/)) {\ndebug = function debug() {\n  var args = Array.prototype.slice.call(arguments);\n  console.error.apply(this, ['client', Date.now().toString()].concat(args));\n};\n}\n\nvar Request = exports.Request = function(opts) {\n  if (!(this instanceof Request)) return new Request(opts);\n\n  this.question = opts.question;\n  this.server = opts.server;\n\n  if (typeof(this.server) === 'string' || this.server instanceof String)\n    this.server = { address: this.server, port: 53, type: 'udp'};\n\n  if (!this.server || !this.server.address || !net.isIP(this.server.address))\n    throw new Error('Server object must be supplied with at least address');\n\n  if (!this.server.type || ['udp', 'tcp'].indexOf(this.server.type) === -1)\n    this.server.type = 'udp';\n\n  if (!this.server.port)\n    this.server.port = 53;\n\n  this.timeout = opts.timeout || 4 * 1000;\n  this.try_edns = opts.try_edns || false;\n\n  this.fired = false;\n  this.id = undefined;\n\n  if (opts.cache || opts.cache === false) {\n    this.cache = opts.cache;\n  } else {\n    this.cache = platform.cache;\n  }\n  debug('request created', this.question);\n};\nutil.inherits(Request, EventEmitter);\n\nRequest.prototype.handle = function(err, answer, cached) {\n  if (!this.fired) {\n    debug('request handled', this.id, this.question);\n\n    if (!cached && this.cache && this.cache.store && answer) {\n      this.cache.store(answer);\n    }\n\n    this.emit('message', err, answer);\n    this.done();\n  }\n};\n\nRequest.prototype.done = function() {\n  debug('request finished', this.id, this.question);\n  this.fired = true;\n  clearTimeout(this.timer_);\n  PendingRequests.remove(this);\n  this.emit('end');\n  this.id = undefined;\n};\n\nRequest.prototype.handleTimeout = function() {\n  if (!this.fired) {\n    debug('request timedout', this.id, this.question);\n    this.emit('timeout');\n    this.done();\n  }\n};\n\nRequest.prototype.error = function(err) {\n  if (!this.fired) {\n    debug('request error', err, this.id, this.question);\n    this.emit('error', err);\n    this.done();\n  }\n};\n\nRequest.prototype.send = function() {\n  debug('request starting', this.question);\n  var self = this;\n\n  if (this.cache && this.cache.lookup) {\n    this.cache.lookup(this.question, function(results) {\n      var packet;\n\n      if (!results) {\n        self._send();\n      } else {\n        packet = new Packet();\n        packet.answer = results.slice();\n        self.handle(null, packet, true);\n      }\n    });\n  } else {\n    this._send();\n  }\n};\n\nRequest.prototype._send = function() {\n  debug('request not in cache', this.question);\n  var self = this;\n\n  this.timer_ = setTimeout(function() {\n    self.handleTimeout();\n  }, this.timeout);\n\n  PendingRequests.send(self);\n};\n\nRequest.prototype.cancel = function() {\n  debug('request cancelled', this.id, this.question);\n  this.emit('cancelled');\n  this.done();\n};\n\nvar _queue = [];\n\nvar sendQueued = function() {\n  debug('platform ready sending queued requests');\n  _queue.forEach(function(request) {\n    request.start();\n  });\n  _queue = [];\n};\n\nplatform.on('ready', function() {\n  sendQueued();\n});\n\nif (platform.ready) {\n  sendQueued();\n}\n\nvar Resolve = function Resolve(opts, cb) {\n  if (!(this instanceof Resolve)) return new Resolve(opts, cb);\n\n  this.opts = util._extend({\n    retryOnTruncate: true,\n  }, opts);\n\n  this._domain = opts.domain;\n  this._rrtype = opts.rrtype;\n\n  this._buildQuestion(this._domain);\n\n  this._started = false;\n  this._current_server = undefined;\n\n  this._server_list = [];\n\n  if (opts.remote) {\n    this._server_list.push({\n      address: opts.remote,\n      port: 53,\n      type: 'tcp',\n    });\n    this._server_list.push({\n      address: opts.remote,\n      port: 53,\n      type: 'udp',\n    });\n  }\n\n  this._request = undefined;\n  this._type = 'getHostByName';\n  this._cb = cb;\n\n  if (!platform.ready) {\n    _queue.push(this);\n  } else {\n    this.start();\n  }\n};\nutil.inherits(Resolve, EventEmitter);\n\nResolve.prototype.cancel = function() {\n  if (this._request) {\n    this._request.cancel();\n  }\n};\n\nResolve.prototype._buildQuestion = function(name) {\n  debug('building question', name);\n  this.question = {\n    type: this._rrtype,\n    class: consts.NAME_TO_QCLASS.IN,\n    name: name\n  };\n};\nexports.Resolve = Resolve;\n\nResolve.prototype._emit = function(err, answer) {\n  debug('resolve end', this._domain);\n  var self = this;\n  process.nextTick(function() {\n    if (err) {\n      err.syscall = self._type;\n    }\n    self._cb(err, answer);\n  });\n};\n\nResolve.prototype._fillServers = function() {\n  debug('resolve filling servers', this._domain);\n  var tries = 0, s, t, u, slist;\n\n  slist = platform.name_servers;\n\n  while (this._server_list.length < platform.attempts) {\n    s = slist[tries % slist.length];\n\n    u = {\n      address: s.address,\n      port: s.port,\n      type: 'udp'\n    };\n\n    t = {\n      address: s.address,\n      port: s.port,\n      type: 'tcp'\n    };\n\n    this._server_list.push(u);\n    this._server_list.push(t);\n\n    tries += 1;\n  }\n\n  this._server_list.reverse();\n};\n\nResolve.prototype._popServer = function() {\n  debug('resolve pop server', this._current_server, this._domain);\n  this._server_list.splice(0, 1, this._current_server);\n};\n\nResolve.prototype._preStart = function() {\n  if (!this._started) {\n    this._started = new Date().getTime();\n    this.try_edns = platform.edns;\n\n    if (!this._server_list.length)\n      this._fillServers();\n  }\n};\n\nResolve.prototype._shouldContinue = function() {\n  debug('resolve should continue', this._server_list.length, this._domain);\n  return this._server_list.length;\n};\n\nResolve.prototype._nextQuestion = function() {\n  debug('resolve next question', this._domain);\n};\n\nResolve.prototype.start = function() {\n  if (!this._started) {\n    this._preStart();\n  }\n\n  if (this._server_list.length === 0) {\n    debug('resolve no more servers', this._domain);\n    this.handleTimeout();\n  } else {\n    this._current_server = this._server_list.pop();\n    debug('resolve start', this._current_server, this._domain);\n\n    this._request = Request({\n      question: this.question,\n      server: this._current_server,\n      timeout: platform.timeout,\n      try_edns: this.try_edns\n    });\n\n    this._request.on('timeout', this._handleTimeout.bind(this));\n    this._request.on('message', this._handle.bind(this));\n    this._request.on('error', this._handle.bind(this));\n\n    this._request.send();\n  }\n};\n\nvar NOERROR = consts.NAME_TO_RCODE.NOERROR,\n    SERVFAIL = consts.NAME_TO_RCODE.SERVFAIL,\n    NOTFOUND = consts.NAME_TO_RCODE.NOTFOUND,\n    FORMERR = consts.NAME_TO_RCODE.FORMERR;\n\nResolve.prototype._handle = function(err, answer) {\n  var rcode, errno;\n\n  if (answer) {\n    rcode = answer.header.rcode;\n  }\n\n  debug('resolve handle', rcode, this._domain);\n\n  switch (rcode) {\n    case NOERROR:\n      // answer trucated retry with tcp\n      //console.log(answer);\n      if (answer.header.tc &&\n          this.opts.retryOnTruncate &&\n          this._shouldContinue()) {\n        debug('truncated', this._domain, answer);\n        this.emit('truncated', err, answer);\n        \n        // remove udp servers\n        this._server_list = this._server_list.filter(function(server) {\n          return server.type === 'tcp';\n        });\n        answer = undefined;\n      }\n      break;\n    case SERVFAIL:\n      if (this._shouldContinue()) {\n        this._nextQuestion();\n        //this._popServer();\n      } else {\n        errno = consts.SERVFAIL;\n      }\n      answer = undefined;\n      break;\n    case NOTFOUND:\n      if (this._shouldContinue()) {\n        this._nextQuestion();\n      } else {\n        errno = consts.NOTFOUND;\n      }\n      answer = undefined;\n      break;\n    case FORMERR:\n      if (this.try_edns) {\n        this.try_edns = false;\n        //this._popServer();\n      } else {\n        errno = consts.FORMERR;\n      }\n      answer = undefined;\n      break;\n    default:\n      if (!err) {\n        errno = consts.RCODE_TO_NAME[rcode];\n        answer = undefined;\n      } else {\n        errno = consts.NOTFOUND;\n      }\n      break;\n  }\n\n  if (errno || answer) {\n    if (errno) {\n      err = new Error(this._type + ' ' + errno);\n      err.errno = err.code = errno;\n    }\n    this._emit(err, answer);\n  } else {\n    this.start();\n  }\n};\n\nResolve.prototype._handleTimeout = function() {\n  var err;\n\n  if (this._server_list.length === 0) {\n    debug('resolve timeout no more servers', this._domain);\n    err = new Error(this._type + ' ' + consts.TIMEOUT);\n    err.errno = consts.TIMEOUT;\n    this._emit(err, undefined);\n  } else {\n    debug('resolve timeout continue', this._domain);\n    this.start();\n  }\n};\n\nvar resolve = function(domain, rrtype, ip, callback) {\n  var res;\n\n  if (!callback) {\n    callback = ip;\n    ip = undefined;\n  }\n\n  if (!callback) {\n    callback = rrtype;\n    rrtype = undefined;\n  }\n\n  rrtype = consts.NAME_TO_QTYPE[rrtype || 'A'];\n\n  if (rrtype === PTR) {\n    return reverse(domain, callback);\n  }\n\n  var opts = {\n    domain: domain,\n    rrtype: rrtype,\n    remote: ip,\n  };\n\n  res = new Resolve(opts);\n\n  res._cb = function(err, response) {\n    var ret = [], i, a;\n\n    if (err) {\n      callback(err, response);\n      return;\n    }\n\n    for (i = 0; i < response.answer.length; i++) {\n      a = response.answer[i];\n      if (a.type === rrtype) {\n        switch (rrtype) {\n          case A:\n          case AAAA:\n            ret.push(a.address);\n            break;\n          case consts.NAME_TO_QTYPE.MX:\n            ret.push({\n              priority: a.priority,\n              exchange: a.exchange\n            });\n            break;\n          case TXT:\n          case NS:\n          case CNAME:\n          case PTR:\n            ret.push(a.data);\n            break;\n          case SRV:\n            ret.push({\n              priority: a.priority,\n              weight: a.weight,\n              port: a.port,\n              name: a.target\n            });\n            break;\n          default:\n            ret.push(a);\n            break;\n        }\n      }\n    }\n\n    if (ret.length === 0) {\n      ret = undefined;\n    }\n\n    callback(err, ret);\n  };\n\n  return res;\n};\nexports.resolve = resolve;\n\nvar resolve4 = function(domain, callback) {\n  return resolve(domain, 'A', function(err, results) {\n    callback(err, results);\n  });\n};\nexports.resolve4 = resolve4;\n\nvar resolve6 = function(domain, callback) {\n  return resolve(domain, 'AAAA', function(err, results) {\n    callback(err, results);\n  });\n};\nexports.resolve6 = resolve6;\n\nvar resolveMx = function(domain, callback) {\n  return resolve(domain, 'MX', function(err, results) {\n    callback(err, results);\n  });\n};\nexports.resolveMx = resolveMx;\n\nvar resolveTxt = function(domain, callback) {\n  return resolve(domain, 'TXT', function(err, results) {\n    callback(err, results);\n  });\n};\nexports.resolveTxt = resolveTxt;\n\nvar resolveSrv = function(domain, callback) {\n  return resolve(domain, 'SRV', function(err, results) {\n    callback(err, results);\n  });\n};\nexports.resolveSrv = resolveSrv;\n\nvar resolveNs = function(domain, callback) {\n  return resolve(domain, 'NS', function(err, results) {\n    callback(err, results);\n  });\n};\nexports.resolveNs = resolveNs;\n\nvar resolveCname = function(domain, callback) {\n  return resolve(domain, 'CNAME', function(err, results) {\n    callback(err, results);\n  });\n};\nexports.resolveCname = resolveCname;\n\nvar resolveTlsa = function(domain, callback) {\n  return resolve(domain, 'TLSA', function(err, results) {\n    callback(err, results);\n  });\n};\nexports.resolveTlsa = resolveTlsa;\n\nvar reverse = function(ip, callback) {\n  var error, opts, res;\n\n  if (!net.isIP(ip)) {\n    error = new Error('getHostByAddr ENOTIMP');\n    error.errno = error.code = 'ENOTIMP';\n    throw error;\n  }\n\n  opts = {\n    domain: utils.reverseIP(ip),\n    rrtype: PTR\n  };\n\n  res = new Lookup(opts);\n\n  res._cb = function(err, response) {\n    var results = [];\n\n    if (response) {\n      response.answer.forEach(function(a) {\n        if (a.type === PTR) {\n          results.push(a.data);\n        }\n      });\n    }\n\n    if (results.length === 0) {\n      results = undefined;\n    }\n\n    callback(err, results);\n  };\n\n  return res;\n};\nexports.reverse = reverse;\n\nvar Lookup = function(opts) {\n  Resolve.call(this, opts);\n  this._type = 'getaddrinfo';\n};\nutil.inherits(Lookup, Resolve);\n\nLookup.prototype.start = function() {\n  var self = this;\n\n  if (!this._started) {\n    this._search_path = platform.search_path.slice(0);\n    this._preStart();\n  }\n\n  platform.hosts.lookup(this.question, function(results) {\n    var packet;\n    if (results && results.length) {\n      debug('Lookup in hosts', results);\n      packet = new Packet();\n      packet.answer = results.slice();\n      self._emit(null, packet);\n    } else {\n      debug('Lookup not in hosts');\n      Resolve.prototype.start.call(self);\n    }\n  });\n};\n\nLookup.prototype._shouldContinue = function() {\n  debug('Lookup should continue', this._server_list.length,\n        this._search_path.length);\n  return this._server_list.length && this._search_path.length;\n};\n\nLookup.prototype._nextQuestion = function() {\n  debug('Lookup next question');\n  this._buildQuestion([this._domain, this._search_path.pop()].join('.'));\n};\n\nvar lookup = function(domain, family, callback) {\n  var rrtype, revip, res;\n\n  if (!callback) {\n    callback = family;\n    family = undefined;\n  }\n\n  if (!family) {\n    family = 4;\n  }\n\n  revip = net.isIP(domain);\n\n  if (revip === 4 || revip === 6) {\n    process.nextTick(function() {\n      callback(null, domain, revip);\n    });\n    return {};\n  }\n\n  if (!domain) {\n    process.nextTick(function() {\n      callback(null, null, family);\n    });\n    return {};\n  }\n\n  rrtype = consts.FAMILY_TO_QTYPE[family];\n\n  var opts = {\n    domain: domain,\n    rrtype: rrtype\n  };\n\n  res = new Lookup(opts);\n\n  res._cb = function(err, response) {\n    var i, afamily, address, a, all;\n\n    if (err) {\n      callback(err, undefined, undefined);\n      return;\n    }\n\n    all = response.answer.concat(response.additional);\n\n    for (i = 0; i < all.length; i++) {\n      a = all[i];\n\n      if (a.type === A || a.type === AAAA) {\n        afamily = consts.QTYPE_TO_FAMILY[a.type];\n        address = a.address;\n        break;\n      }\n    }\n\n    callback(err, address, afamily);\n  };\n\n  return res;\n};\nexports.lookup = lookup;\n","/home/travis/build/npmtest/node-npmtest-native-dns/node_modules/native-dns/lib/pending.js":"// Copyright 2012 Timothy J Fontaine <tjfontaine@gmail.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE\n\n'use strict';\n\nvar net = require('net'),\n    util = require('util'),\n    EventEmitter = require('events').EventEmitter,\n    Packet = require('./packet'),\n    consts = require('native-dns-packet').consts,\n    UDPSocket = require('./utils').UDPSocket,\n    TCPSocket = require('./utils').TCPSocket;\n\nvar debug = function() {\n  //var args = Array.prototype.slice.call(arguments);\n  //console.log.apply(this, ['pending', Date.now().toString()].concat(args));\n};\n\nvar SocketQueue = function(socket, server) {\n  this._active = {};\n  this._active_count = 0;\n  this._pending = [];\n\n  debug('created', server);\n\n  this._server = server;\n\n  this._socket = socket;\n  this._socket.on('ready', this._onlisten.bind(this));\n  this._socket.on('message', this._onmessage.bind(this));\n  this._socket.on('close', this._onclose.bind(this));\n  this._socket.bind(server);\n\n  this._refd = true;\n};\nutil.inherits(SocketQueue, EventEmitter);\n\nSocketQueue.prototype.send = function(request) {\n  debug('added', request.question);\n  this._pending.push(request);\n  this._fill();\n};\n\nSocketQueue.prototype.remove = function(request) {\n  var req = this._active[request.id];\n  var idx = this._pending.indexOf(request);\n\n  if (req) {\n    delete this._active[request.id];\n    this._active_count -= 1;\n    this._fill();\n  }\n\n  if (idx > -1)\n    this._pending.splice(idx, 1);\n\n  this._unref();\n};\n\nSocketQueue.prototype.close = function() {\n  debug('closing', this._server);\n  this._socket.close();\n  this._socket = undefined;\n  this.emit('close');\n};\n\nSocketQueue.prototype._fill = function() {\n  debug('pre fill, active:', this._active_count, 'pending:',\n        this._pending.length);\n\n  while (this._listening && this._pending.length &&\n         this._active_count < 100) {\n    this._dequeue();\n  }\n\n  debug('post fill, active:', this._active_count, 'pending:',\n        this._pending.length);\n};\n\nvar random_integer = function() {\n  return Math.floor(Math.random() * 50000 + 1);\n};\n\nSocketQueue.prototype._dequeue = function() {\n  var req = this._pending.pop();\n  var id, packet, dnssocket;\n\n  if (req) {\n    id = random_integer();\n\n    while (this._active[id])\n      id = random_integer();\n\n    debug('sending', req.question, id);\n\n    req.id = id;\n    this._active[id] = req;\n    this._active_count += 1;\n\n    try {\n      packet = new Packet(this._socket.remote(req.server));\n      packet.header.id = id;\n      packet.header.rd = 1;\n\n      if (req.try_edns) {\n        packet.edns_version = 0;\n        //TODO when we support dnssec\n        //packet.do = 1\n      }\n\n      packet.question.push(req.question);\n      packet.send();\n\n      this._ref();\n    } catch (e) {\n      req.error(e);\n    }\n  }\n};\n\nSocketQueue.prototype._onmessage = function(msg, remote) {\n  var req, packet;\n\n  debug('got a message', this._server);\n\n  try {\n    packet = Packet.parse(msg, remote);\n    req = this._active[packet.header.id];\n    debug('associated message', packet.header.id);\n  } catch (e) {\n    debug('error parsing packet', e);\n  }\n\n  if (req) {\n    delete this._active[packet.header.id];\n    this._active_count -= 1;\n    req.handle(null, packet);\n    this._fill();\n  }\n\n  this._unref();\n};\n\nSocketQueue.prototype._unref = function() {\n  var self = this;\n  this._refd = false;\n\n  if (this._active_count <= 0) {\n    if (this._socket.unref) {\n      debug('unrefd socket');\n      this._socket.unref();\n    } else if (!this._timer) {\n      this._timer = setTimeout(function() {\n        self.close();\n      }, 300);\n    }\n  }\n};\n\nSocketQueue.prototype._ref = function() {\n  this._refd = true;\n  if (this._socket.ref) {\n    debug('refd socket');\n    this._socket.ref();\n  } else if (this._timer) {\n    clearTimeout(this._timer);\n    this._timer = null;\n  }\n};\n\nSocketQueue.prototype._onlisten = function() {\n  this._unref();\n  this._listening = true;\n  this._fill();\n};\n\nSocketQueue.prototype._onclose = function() {\n  var req, err, self = this;\n\n  debug('socket closed', this);\n\n  this._listening = false;\n\n  err = new Error('getHostByName ' + consts.TIMEOUT);\n  err.errno = consts.TIMEOUT;\n\n  while (this._pending.length) {\n    req = this._pending.pop();\n    req.error(err);\n  }\n\n  Object.keys(this._active).forEach(function(key) {\n    var req = self._active[key];\n    req.error(err);\n    delete self._active[key];\n    self._active_count -= 1;\n  });\n};\n\nvar serverHash = function(server) {\n  if (server.type === 'tcp')\n    return server.address + ':' + server.port;\n  else\n    return 'udp' + net.isIP(server.address);\n};\n\nvar _sockets = {};\n\nexports.send = function(request) {\n  var hash = serverHash(request.server);\n  var socket = _sockets[hash];\n\n  if (!socket) {\n    switch (hash) {\n      case 'udp4':\n      case 'udp6':\n        socket = new SocketQueue(new UDPSocket(), hash);\n        break;\n      default:\n        socket = new SocketQueue(new TCPSocket(), request.server);\n        break;\n    }\n\n    socket.on('close', function() {\n      delete _sockets[hash];\n    });\n\n    _sockets[hash] = socket;\n  }\n\n  socket.send(request);\n};\n\nexports.remove = function(request) {\n  var hash = serverHash(request.server);\n  var socket = _sockets[hash];\n  if (socket) {\n    socket.remove(request);\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-native-dns/node_modules/native-dns/benchmark.js":"'use strict';\n\nvar assert = require('assert');\nvar EventEmitter = require('events').EventEmitter;\nvar util = require('util');\n\n/*\nDoes ramping up \"concurrency\" test our ability to keep track of\nmultiple queries in flight, or does it just benchmark process.nextTick?\n\noutput format: <library> <oncurrency> <time> <completed queries / time>\n\nresults with caching\n====================\n\nstock 1 0.304 3289.4736842105262\nstock 2 0.139 7194.244604316546\nstock 4 0.067 14925.373134328358\nstock 8 0.037 27027.027027027027\nstock 16 0.037 27027.027027027027\nstock 32 0.031 32258.064516129034\nstock 64 0.033 30303.0303030303\nstock 128 0.032 31250\nstock 256 0.031 32258.064516129034\nstock 512 0.03 33333.333333333336\nstock 1024 5.08 196.8503937007874\n\nnative-dns 1 0.18 5555.555555555556\nnative-dns 2 0.113 8849.557522123894\nnative-dns 4 0.083 12048.192771084337\nnative-dns 8 0.08 12500\nnative-dns 16 0.079 12658.227848101265\nnative-dns 32 0.076 13157.894736842105\nnative-dns 64 0.085 11764.70588235294\nnative-dns 128 0.067 14925.373134328358\nnative-dns 256 0.068 14705.882352941175\nnative-dns 512 0.096 10416.666666666666\nnative-dns 1024 0.129 7751.937984496124\n\nresults without caching\n=======================\n\nstock 1 0.543 1841.6206261510129\nstock 2 0.143 6993.006993006994\nstock 4 0.068 14705.882352941175\nstock 8 0.036 27777.77777777778\nstock 16 0.032 31250\nstock 32 0.034 29411.76470588235\nstock 64 0.037 27027.027027027027\nstock 128 0.032 31250\nstock 256 0.037 27027.027027027027\nstock 512 5.117 195.42700801250732\nstock 1024 6.011 166.36167027116952\n\nnative-dns 1 0.517 1934.2359767891683\nnative-dns 2 0.309 3236.2459546925566\nnative-dns 4 0.236 4237.28813559322\nnative-dns 8 0.216 4629.62962962963\nnative-dns 16 0.164 6097.560975609756\nnative-dns 32 0.157 6369.426751592357\nnative-dns 64 0.15 6666.666666666667\nnative-dns 128 0.18 5555.555555555556\nnative-dns 256 0.176 5681.818181818182\nnative-dns 512 0.173 5780.346820809249\nnative-dns 1024 0.164 6097.560975609756\n*/\n\nvar names = [\n  'www.google.com',\n  'www.facebook.com',\n  'www.intel.com',\n  'www.amd.com',\n  'www.yahoo.com',\n  'www.msnbc.com',\n  'www.microsoft.com',\n  'www.apple.com',\n  'www.youtube.com',\n  'www.amazon.com',\n  'www.twitter.com',\n  'www.ebay.com',\n  'www.ask.com',\n  'www.aol.com',\n  'www.reddit.com',\n  'www.wikipedia.org',\n  'www.wordpress.com',\n  'www.linkedin.com',\n];\n\nvar Bench = function(name, library, count, concurrency) {\n  this.name = name;\n  this.library = library;\n  this.count = count;\n  this.completed = 0;\n  this.dispatched = 0;\n  this.concurrency = concurrency;\n  this.ended = false;\n};\nutil.inherits(Bench, EventEmitter);\n\nvar nextTick = process.nextTick;\nvar nextTick = global.setImmediate || process.nextTick;\n\nBench.prototype.start = function() {\n  var i, self = this;\n\n  this.start = Date.now();\n\n  for (i = 0; i < this.concurrency; i++) {\n    nextTick(function() {\n      self.query();\n    });\n  }\n};\n\nBench.prototype.query = function() {\n  var self = this;\n\n  if (this.dispatched < this.count) {\n    this.dispatched += 1;\n    this.library.resolve(names[this.dispatched % names.length], 'A', function (err, res) {\n      self.done = Date.now();\n      if (err) {\n        self.count = 0;\n        console.log(err);\n        console.log(err.stack);\n        self.end();\n      } else {\n        self.completed += 1;\n        self.query();\n      }\n    });\n  } else if(this.completed === this.count) {\n    this.end();\n  }\n};\n\nvar results = {};\n\nBench.prototype.end = function() {\n  if (this.ended) return;\n\n  this.ended = true;\n\n  var total_seconds = (this.done - this.start) / 1000;\n\n  if (!results[this.name]) {\n    results[this.name] = {};\n  }\n\n  results[this.name][this.concurrency] = {\n    time: total_seconds,\n    completed: this.completed,\n    qps: this.completed/total_seconds,\n  };\n\n  this.emit('end');\n};\n\nvar opt = require('optimist').usage('Usage: $0 <library> <concurrency> <queries>');\nvar argv = opt.argv._;\n\nif (argv.length != 3) {\n  opt.showHelp()\n  process.exit(1)\n}\n\nvar library_name = argv[0].toLowerCase();\nvar concurrent = parseInt(argv[1]);\nvar queries = parseInt(argv[2]);\n\nif (['stock', 'native-dns'].indexOf(library_name) === -1) {\n  opt.showHelp();\n  console.error('library should be one of: stock, native-dns\\r\\n');\n  process.exit(1);\n}\n\nif (isNaN(concurrent) || isNaN(queries)) {\n  opt.showHelp();\n  console.error('concurrency and queries should be integers');\n  process.exit(1);\n}\n\nvar library;\n\nif (library_name === 'stock') {\n  library = require('dns');\n} else {\n  library = require('./dns');\n  // to be fair don't cache\n  library.platform.cache = false;\n}\n\nvar bench = new Bench(library_name, library, queries, concurrent);\n\nfunction check() {\n  if (library.platform && !library.platform.ready)\n    nextTick(check)\n  else\n    bench.start()\n}\n\nbench.on('end', function () {\n  Object.keys(results).forEach(function(library) {\n    var l = results[library];\n    Object.keys(results[library]).forEach(function(concurrency) {\n      var r = l[concurrency];\n      console.log(library, concurrency, r.time, r.qps);\n    });\n  });\n});\n\ncheck();\n"}